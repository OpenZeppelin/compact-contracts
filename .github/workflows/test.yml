name: Compact Contracts Test Suite

on:
  pull_request:
  push:
    branches:
      - main

env:
  TURBO_TELEMETRY_DISABLED: 1
  COMPILER_VERSION: "0.23.0"
  LANGUAGE_VERSION: "0.15.0"

jobs:
  run-suite:
    name: Run Test Suite
    runs-on: ubuntu-24.04
    timeout-minutes: 15

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2 # Recommended by turbo team

      - name: Setup Environment
        uses: ./.github/actions/setup

      - name: Install Compact compiler
        id: setup
        shell: bash
        run: |
          set -euo pipefail
          # Create directory for compiler
          COMPACT_HOME="$HOME/compactc"
          mkdir -p "$COMPACT_HOME"

          # Create URL
          ZIP_FILE="compactc_v${COMPILER_VERSION}_x86_64-unknown-linux-musl.zip"
          DOWNLOAD_URL="https://d3fazakqrumx6p.cloudfront.net/artifacts/compiler/compactc_${COMPILER_VERSION}/${ZIP_FILE}"

          echo "‚¨áÔ∏è Downloading Compact compiler..."
          curl -Ls "$DOWNLOAD_URL" -o "$COMPACT_HOME/compactc.zip"

          echo "üì¶ Extracting..."
          unzip -q "$COMPACT_HOME/compactc.zip" -d "$COMPACT_HOME"
          chmod +x "$COMPACT_HOME"/{compactc,compactc.bin,zkir}

          echo "üìÅ Setting environment variables..."
          echo "COMPACT_HOME=$COMPACT_HOME" >> "$GITHUB_ENV"
          echo "$COMPACT_HOME" >> "$GITHUB_PATH"

          echo "‚úÖ Verifying installation..."
          if [ ! -f "$COMPACT_HOME/compactc" ]; then
            echo "::error::‚ùå compactc not found in $COMPACT_HOME"
            exit 1
          fi

          echo "ü§ñ Testing installation..."
          "$COMPACT_HOME/compactc" --version

      - name: Check compiler and language version
        run: |
            COMPILER_OUTPUT=$(compactc --version)
            COMPUTED_COMPILER_VERSION=$(echo "$COMPILER_OUTPUT" | grep -oP '\b0\.[0-9]+\.[0-9]+\b' | head -n 1)
            if [ "$COMPUTED_COMPILER_VERSION" != "$COMPILER_VERSION" ]; then
              errMsg="‚ùå Compiler version mismatch!%0AExpected: $COMPILER_VERSION%0AGot: $COMPUTED_COMPILER_VERSION"
              echo "::error::$errMsg"
              exit 1
            fi
            echo "‚úÖ Compiler version matches: $COMPUTED_COMPILER_VERSION"

            LANGUAGE_OUTPUT=$(compactc --language-version)
            COMPUTED_LANGUAGE_VERSION=$(echo "$LANGUAGE_OUTPUT" | grep -oP '\b0\.[0-9]+\.[0-9]+\b' | tail -n 1)
            if [ "$COMPUTED_LANGUAGE_VERSION" != "$LANGUAGE_VERSION" ]; then
                errMsg="‚ùå Language version mismatch!%0AExpected: $LANGUAGE_VERSION%0AGot: $COMPUTED_LANGUAGE_VERSION"
                echo "::error::$errMsg"
                exit 1
            fi

            echo "‚úÖ Language version matches: $COMPUTED_LANGUAGE_VERSION"

      - name: Compile contracts (with retry on hash mismatch)
        shell: bash
        run: |
          set -euo pipefail

          compile() {
            echo "‚öôÔ∏è Running Compact compilation..."
            if ! output=$(turbo compact --concurrency=1 2>&1); then
              echo "‚ùå Compilation failed."

              if echo "$output" | grep -q "Hash mismatch" && [ -d "$HOME/.cache/midnight/zk-params" ]; then
                echo "‚ö†Ô∏è Hash mismatch detected *and* zk-params exists. Removing cache..."
                rm -rf "$HOME/.cache/midnight/zk-params"
                echo "::notice::‚ôªÔ∏è Retrying compilation after clearing zk-params..."
                turbo compact --concurrency=1 || { echo "::error::‚ùå Retry also failed."; exit 1; }
              else
                echo "üö´ Compilation failed for another reason or zk-params missing. No retry."
                exit 1
              fi
            fi
          }

          compile

      - name: Run type checks
        run: turbo types

      - name: Run tests
        run: turbo test
