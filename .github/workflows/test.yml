name: Compact Contracts Test Suite

on:
  push
    # paths:
    #   - 'contracts/**/*.compact'
    #   - 'contracts/**/*.ts'

env:
  TURBO_TELEMETRY_DISABLED: 1
  COMPILER_VERSION: "0.23.0"
  LANGUAGE_VERSION: "0.15.0"

jobs:
  run-suite:
    name: Run Test Suite
    runs-on: ubuntu-24.04
    timeout-minutes: 15

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2 # Recommended by turbo team

      - name: Setup Environment
        uses: ./.github/actions/setup

      - name: Build compact package
        shell: bash
        run: turbo build --filter=@openzeppelin-midnight/compact

      - name: Validate build artifacts
        shell: bash
        run: |
          REQUIRED_FILES=(
              "compact/dist/runCompiler.js"
              "compact/dist/runBuilder.js"
          )
          for file in "${REQUIRED_FILES[@]}"; do
              if [ ! -f "$file" ]; then
                echo "::error::‚ùå Missing required file: $file"
                exit 1
              fi
          done

      - name: Install Compact compiler
        id: setup
        shell: bash
        run: |
          set -euo pipefail
          # Create directory for compiler
          COMPACT_HOME="$HOME/compactc"
          mkdir -p "$COMPACT_HOME"

          # Create URL
          ZIP_FILE="compactc_v${COMPILER_VERSION}_x86_64-unknown-linux-musl.zip"
          DOWNLOAD_URL="https://d3fazakqrumx6p.cloudfront.net/artifacts/compiler/compactc_${COMPILER_VERSION}/${ZIP_FILE}"

          echo "‚¨áÔ∏è Downloading Compact compiler..."
          curl -Ls "$DOWNLOAD_URL" -o "$COMPACT_HOME/compactc.zip"

          echo "üì¶ Extracting..."
          unzip -q "$COMPACT_HOME/compactc.zip" -d "$COMPACT_HOME"
          chmod +x "$COMPACT_HOME"/{compactc,compactc.bin,zkir}

          echo "üìÅ Setting environment variables..."
          echo "COMPACT_HOME=$COMPACT_HOME" >> "$GITHUB_ENV"
          echo "$COMPACT_HOME" >> "$GITHUB_PATH"

          echo "‚úÖ Verifying installation..."
          if [ ! -f "$COMPACT_HOME/compactc" ]; then
            echo "::error::‚ùå compactc not found in $COMPACT_HOME"
            exit 1
          fi

          echo "ü§ñ Testing installation..."
          "$COMPACT_HOME/compactc" --version

      - name: Check compiler version
        run: |
            EXPECTED_COMPILER_VERSION="0.23.0"
            COMPILER_OUTPUT=$(compactc --version)
            COMPILER_VERSION=$(echo "$COMPILER_OUTPUT" | grep -oP '\b0\.[0-9]+\.[0-9]+\b' | head -n 1)
            if [ "$COMPILER_VERSION" != "$EXPECTED_COMPILER_VERSION" ]; then
              errMsg="‚ùå Compiler version mismatch!%0AExpected: $EXPECTED_COMPILER_VERSION%0AGot: $COMPILER_VERSION"
              echo "::error::$errMsg"
              exit 1
            fi
            echo "‚úÖ Compiler version matches: $COMPILER_VERSION"

      - name: Check language version
        run: |
          EXPECTED_LANGUAGE_VERSION="0.15.0"
          LANGUAGE_OUTPUT=$(compactc --language-version)
          LANGUAGE_VERSION=$(echo "$LANGUAGE_OUTPUT" | grep -oP '\b0\.[0-9]+\.[0-9]+\b' | tail -n 1)
          if [ "$LANGUAGE_VERSION" != "$EXPECTED_LANGUAGE_VERSION" ]; then
              errMsg="‚ùå Language version mismatch!%0AExpected: $EXPECTED_LANGUAGE_VERSION%0AGot: $LANGUAGE_VERSION"
              echo "::error::$errMsg"
              exit 1
          fi
          echo "‚úÖ Language version matches: $LANGUAGE_VERSION"

      - name: Build contracts
        run: turbo build --filter="./contracts/*"
        timeout-minutes: 10

      - name: Check if build artifacts exist
        run: |
          if ! find contracts -type d -name artifacts | grep -q . ; then
            echo "::error::‚ùå Build artifacts not found in any contracts/*/artifacts"
            exit 1
          fi

          # List build artifacts
          echo "‚úÖ Build artifacts found:"
          echo "Package build artifacts (dist):"
          find contracts -name "dist" -type d -exec ls -la {} \;
          echo -e "\nCompact code artifacts (src/artifacts):"
          find contracts -name "artifacts" -type d -exec ls -la {} \;

      - name: Run type checks
        run: turbo types

      - name: Run Contract Tests
        run: turbo test
