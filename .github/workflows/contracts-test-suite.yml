name: Compact Contracts Test Suite

on:
  push
    # paths:
    #   - 'contracts/**/*.compact'
    #   - 'contracts/**/*.test.ts'

env:
  TURBO_TELEMETRY_DISABLED: 1

jobs:
  run-suite:
    name: Run Test Suite
    runs-on: ubuntu-24.04
    timeout-minutes: 15

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2 # Recommended by turbo team

      - name: Setup Environment
        uses: ./.github/actions/setup

      - name: Build compact package
        shell: bash
        run: |
          cd compact
          turbo build
          cd ..

      - name: Validate build artifacts
        shell: bash
        run: |
          REQUIRED_FILES=(
              "compact/dist/runCompiler.js"
              "compact/dist/runBuilder.js"
          )
          for file in "${REQUIRED_FILES[@]}"; do
              if [ ! -f "$file" ]; then
                echo "::error::❌ Missing required file: $file"
                exit 1
              fi
          done

      - name: Install Compact compiler
        id: setup
        shell: bash
        run: |
          # Set version variables
          COMPILER_VERSION="0.23.0"
          LANGUAGE_VERSION="0.15.0"

          # Create directory for compiler
          COMPACT_HOME="$HOME/compactc"
          mkdir -p "$COMPACT_HOME"
          cd "$COMPACT_HOME"

          echo "⬇️ Downloading Compact compiler..."
          curl -L https://d3fazakqrumx6p.cloudfront.net/artifacts/compiler/compactc_${COMPILER_VERSION}/compactc_v${COMPILER_VERSION}_x86_64-unknown-linux-musl.zip -o compactc.zip
          unzip compactc.zip
          chmod +x compactc.bin zkir compactc

          # Set up environment variables
          echo "COMPACT_HOME=$COMPACT_HOME" >> $GITHUB_ENV
          echo "$COMPACT_HOME" >> $GITHUB_PATH

          # Verify installation
          [ -f "$COMPACT_HOME/compactc" ] || { echo "::error::❌ Failed to install compiler - compactc not found"; exit 1; }

          # Test installation
          "$COMPACT_HOME/compactc" --version

      - name: Check compiler version
        run: |
            EXPECTED_COMPILER_VERSION="0.23.0"
            COMPILER_OUTPUT=$(compactc --version)
            COMPILER_VERSION=$(echo "$COMPILER_OUTPUT" | grep -oP '\b0\.[0-9]+\.[0-9]+\b' | head -n 1)
            if [ "$COMPILER_VERSION" != "$EXPECTED_COMPILER_VERSION" ]; then
              errMsg="❌ Compiler version mismatch!%0AExpected: $EXPECTED_COMPILER_VERSION%0AGot: $COMPILER_VERSION"
              echo "::error::$errMsg"
              exit 1
            fi
            echo "✅ Compiler version matches: $COMPILER_VERSION"

      - name: Check language version
        run: |
          EXPECTED_LANGUAGE_VERSION="0.15.0"
          LANGUAGE_OUTPUT=$(compactc --language-version)
          LANGUAGE_VERSION=$(echo "$LANGUAGE_OUTPUT" | grep -oP '\b0\.[0-9]+\.[0-9]+\b' | tail -n 1)
          if [ "$LANGUAGE_VERSION" != "$EXPECTED_LANGUAGE_VERSION" ]; then
              errMsg="❌ Language version mismatch!%0AExpected: $EXPECTED_LANGUAGE_VERSION%0AGot: $LANGUAGE_VERSION"
              echo "::error::$errMsg"
              exit 1
          fi
          echo "✅ Language version matches: $LANGUAGE_VERSION"

      - name: Build contracts
        run: turbo build --filter="./contracts/*"
        timeout-minutes: 10

      - name: Check if build artifacts exist
        run: |
          if ! find contracts -type d -name artifacts | grep -q . ; then
            echo "::error::❌ Build artifacts not found in any contracts/*/artifacts"
            exit 1
          fi

          # List build artifacts
          echo "✅ Build artifacts found:"
          echo "Package build artifacts (dist):"
          find contracts -name "dist" -type d -exec ls -la {} \;
          echo -e "\nCompact code artifacts (src/artifacts):"
          find contracts -name "artifacts" -type d -exec ls -la {} \;

      - name: Run type checks
        run: turbo types

      - name: Run Contract Tests
        run: turbo test