// SPDX-License-Identifier: MIT
pragma language_version >= 0.14.0;

/**
 * @module Initializable
 * @description Initializable provides a simple mechanism that mimics the functionality of a constructor.
 */
module Initializable{
  import CompactStandardLibrary;

  export enum STATE { uninitialized, initialized }

  export ledger state: STATE;

  /**
   * @description Initializes the state thus ensuring the calling circuit can only be called once.
   *
   * @returns None.
   */
  export circuit initialize(): [] {
    assert state == STATE.uninitialized "Contract already initialized";
    state = STATE.initialized;
  }

  /**
   * @description Returns true if the state is initialized.
   *
   * @returns {Boolean} - whether the contract has been initialized.
   */
  export circuit isInitialized(): Boolean {
    return (state == STATE.initialized);
  }
}
