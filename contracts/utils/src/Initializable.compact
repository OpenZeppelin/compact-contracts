// SPDX-License-Identifier: MIT
pragma language_version >= 0.14.0;

/**
 * @module Initializable
 * @description Initializable provides a simple mechanism that mimics the functionality of a constructor.
 */
module Initializable {
  import CompactStandardLibrary;

  export ledger _isInitialized: Boolean;

  /**
   * @description Initializes the state thus ensuring the calling circuit can only be called once.
   *
   * @returns None.
   */
  export circuit initialize(): [] {
    assertNotInitialized();
    _isInitialized = true;
  }

  /**
   * @description Asserts that the contract has been initialized, throwing an error if not.
   *
   * @returns None.
   * @throws Will throw "Initializable: contract not initialized" if the contract is not initialized.
   */
  export circuit assertInitialized(): [] {
    assert _isInitialized "Initializable: contract not initialized";
  }

  /**
   * @description Asserts that the contract has not been initialized, throwing an error if it has.
   *
   * @returns None.
   * @throws Will throw "Initializable: Contract already initialized" if the contract is already initialized.
   */
  export circuit assertNotInitialized(): [] {
    assert !_isInitialized "Initializable: contract already initialized";
  }
}
