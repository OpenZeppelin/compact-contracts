// SPDX-License-Identifier: MIT

pragma language_version >= 0.16.0;

/**
 * @module ShieldedAccessControlUtils.
 * @description A library for common utilities used in the Shielded Access Control module.
 */
module ShieldedAccessControlUtils {
  import CompactStandardLibrary;

  /**
   * @description Returns whether `keyOrAddress` is a ContractAddress type.
   *
   * Disclosures:
   *
   * - The type data of `keyOrAddress` - a ZswapCoinPublicKey or ContractAddress.
   *
   * @param {Either<ZswapCoinPublicKey, ContractAddress>} keyOrAddress - The target value to check, either a ZswapCoinPublicKey or a ContractAddress.
   * @return {Boolean} - Returns true if `keyOrAddress` is a ContractAddress.
   */
  export pure circuit isContractAddress(keyOrAddress: Either<ZswapCoinPublicKey, ContractAddress>): Boolean {
    return disclose(!keyOrAddress.is_left);
  }
}
